@echo off

>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if '%errorlevel%' NEQ '0' (
	echo You must run the script with admin rights...
	pause > nul
    exit /B    
) 

CD /D "%~dp0"
echo ===================================
echo           mtools setup
echo ===================================
echo.

::-- CHECK FOR DEPENDENCIES

IF NOT DEFINED MTOOLS_DEPENDENCIES_PATH (
echo ************* ERROR ***************
echo Could not find the env. var. for the libraries that mtools depends on.
echo Did you forget to run the script 'setup-mtools-dependencies.bat' ?
echo Aborting...
echo ***********************************
	pause > nul
	exit /b
)

::-- SET THE ENVIRONMENT VARIABLE

echo.
echo [Setting the global environment variables MTOOLS_LIB....]
echo on
setx /m MTOOLS_LIB "%CD%\\" 
@echo off


::-- ASK FOR SSE SUPPORT

echo.
echo [SSE support]
:loopchoiceSSE
echo.
set /p ssesupport="Do you want to enable SSE instruction set support (Y/N) ? " 
echo.
if "%ssesupport%" equ "Y" (
	set use_sse=y
	goto:makeconfig
	)
if "%ssesupport%" equ "y" (
	set use_sse=y
	goto:makeconfig
	)
if "%ssesupport%" equ "N" (
	set use_sse=n
	goto:makeconfig
	)
if "%ssesupport%" equ "n" (
	set use_sse=n
	goto:makeconfig
	)
echo "Invalid choice."
goto :loopchoiceSSE

	
:makeconfig	

::-- CREATE mtools_config.hpp

echo [Creating the configuration file 'mtools_config.hpp']
echo. 
echo /**************************************************************  1>  ./mtools/headers/mtools_config.hpp
echo  *               MTOOLS CONFIGURATION FILE                    *  1>>  ./mtools/headers/mtools_config.hpp
echo  *                                                            *  1>>  ./mtools/headers/mtools_config.hpp
echo  * This file is automatically generated.                      *  1>> ./mtools/headers/mtools_config.hpp
echo  * Run the script 'setup-mtools' to update the configuration. *  1>> ./mtools/headers/mtools_config.hpp
echo  **************************************************************/ 1>>  ./mtools/headers/mtools_config.hpp
call:newline
echo ^#pragma once 1>>  ./mtools/headers/mtools_config.hpp
call:newline
call:newline

::- mtools version
set /p MTOOLSVERSION=<./VERSION
echo ^#define MTOOLS_VERSION %MTOOLSVERSION%    1>>  ./mtools/headers/mtools_config.hpp
call:newline

::- MTOOLS_BASIC_CONSOLE flag (disabled on windows)
echo ^#define MTOOLS_BASIC_CONSOLE 0          1>>  ./mtools/headers/mtools_config.hpp
call:newline

::- MTOOLS_USE_SSE flag
if %use_sse% equ y (
	echo ^#define MTOOLS_USE_SSE 1              1>> ./mtools/headers/mtools_config.hpp
	)
if not %use_sse% equ y (
	echo ^#define MTOOLS_USE_SSE 0               1>> ./mtools/headers/mtools_config.hpp
	)
call:newline

::- MTOOLS_USE_OPENMP flag (disable on windows)
echo ^#define MTOOLS_USE_OPENMP 0             1>>  ./mtools/headers/mtools_config.hpp
call:newline

::- MTOOLS_USE_CAIRO flag (disabled for the time being)
echo ^#define MTOOLS_USE_CAIRO 0             1>>  ./mtools/headers/mtools_config.hpp
call:newline

::-- ADD OPENCL CONFIG FILE		
type "%OPENCL_LIB%\mtools_config_opencl.txt"     1>> ./mtools/headers/mtools_config.hpp

:: -- END OF mtools_config.hpp
echo /^* end of mtools_config.hpp ^*/            1>> ./mtools/headers/mtools_config.hpp
call:newline


::-- FINISHED 
echo.
echo.
echo Configuration complete.
pause > nul
exit /b


::-- add a newline to the configuration file. 
:newline
echo. 1>> ./mtools/headers/mtools_config.hpp
goto:eof



