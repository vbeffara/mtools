---------------------------------------------
         INSTALLATION OF MTOOLS
---------------------------------------------

The library uses several C++11 specificities and as some of the new 
headers in the STL so you need a fairly recent compiler to build it. 
It also depends a few other libraries:

	- CImg (http://cimg.eu) [image library]
	- fltk (http://www.fltk.org) [gui library]
	- zlib (http://www.zlib.net) [compression library]
	- libpng (http://www.libpng.org) [for reading/writing png images]
	- libjpeg (http://sourceforge.net/projects/libjpeg/) [for reading/writing jpeg images]

----------------------
     On windows
----------------------
[tested on Windows 7 with VS2015RC]

You must install the libraries above before compiling mtools. Since 
FLTK already bundles zlib, libpng and libjpeg, it suffices to install 
fltk and CImg. The visual studio solution/project files  define both 
32bit and 64bit configurations so the libraries should also provide 
binaries for both platforms if you want to build everything. 

1) Download fltk (http://www.fltk.org), version 1.3.3 or above. 

2) Build fltk, fltkdll, fltkimages, fltkzlib, fltkpng, fltkjpeg for 
32bit in Release and Debug. Normally, the binaries are put in FLTK's 
lib/ subdirectory.

3) Create a new directory lib32/ at the root of the FLTK source tree 
and move the content of lib/ to this new directory. add also 
fltkdll.dll  and fltkdlld.dll to lib32/ (these files are not by default 
in  the /lib directory). The directory should therefore contain at least: 
fltk.lib, fltkd.lib, fltkdll.lib, fltkdlld.lib, fltkdll.dll, fltkdlld.dll,
fltkimages, fltkimagesd, fltkjpeg.lib, fltkjpegd.lib,  fltkpng.lib, 
fltkpngd.lib, fltkzlib.lib, fltkzlib

4) Repeat the same step building the libraries for 64bit. Again, move all 
the binaries to a directory named lib64/ at the root of the FLTK source 
tree.

5) Define an global environment variable 'FLTK_LIB' in Windows pointing 
to FLTK root directory. The directory pointed by 'FLTK_LIB'should now 
contain at least the following sub directories:
        - /FL/   with the FLTK headers
        - /zlib/ with the zlib headers
        - /png/  with the libpng headers
        - /jpeg/ with the libjpeg headers
        - /lib32/ with the binaries (32 bit)
        - /lib64/ with the binaries (64 bit)

6) Download CImg (http://cimg.eu) version 1.6.3 or higher. There is nothing
to install, just put the CImg folder wherever you please and then define
the environement variable 'CIMG_LIB' in Windows so that it points to the 
CImg directory (i.e. the directory that contain CImg.h)

7) Open the mtools.sln file at the root of the mtools source tree with 
VS2015 and build each versions of the library. Hopefully it should work...
You can try the test program to check that everything is ok. 

8) The example directory contains sample project demonstrating how to use
the library. Before, compiling the example, you must define yet another 
environement variable 'MTOOLS_LIB' pointing to the base directory of the 
<<<<<<< HEAD
library (i.e. the directory containing this file). You can define the env.
variable directly or you can run the 'setEnvVar-mtools.bat' script as 
administrator. 
=======
library (i.e. the directory containing this file). You can automatically
create this env. var. by running the 'setEnvVar-mtools.bat' script located
in mtools's root directory. 
>>>>>>> origin/master

NOTE: If you use mtools::cout in a program before 'main()' even starts, you 
should probably use the mtools version linked against the DLL version of FLTK 
as it will insure that FLTK is always properly initialized before it is used. 
Otherwise, "static initialization fiasco" type problems can occur...


----------------------
      On Linux 
----------------------
[tested on Linux Mint and with gcc 5.1]

1) Make sure you use a recent version of gcc: v4.8 currently bundled with 
ubuntu (as of 06/15) does no have support for some of the C++11 specificities 
needed to build the library. 

2) Make sure that the required libs fltk, zlib, libpng, libjpeg and CImg are 
installed on the system, up to date, and accessible (in /usr, /usr/local/...).
You need FLTK at least version 1.3.3. 

3) Run 'make' in the linux/ sub-directory of the mtools tree and wait/pray. 
This should normally build the library and the test program.

4) Once the library is built. You can go into the example directory and type 
'make' inside the sub-directories to build and try some of the examples. 

----------------------
     On MacOS X
----------------------
Good luck to you ! 
It should 'theorically' work but I have never tried...


