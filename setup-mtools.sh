#!/bin/sh


# This is a general-purpose function to ask Yes/No questions in Bash, either
# with or without a default answer. It keeps repeating the question until it
# gets a valid answer.

ask() {
    # https://djm.me/ask
    local prompt default reply

    while true; do

        if [ "${2:-}" = "Y" ]; then
            prompt="Y/n"
            default=Y
        elif [ "${2:-}" = "N" ]; then
            prompt="y/N"
            default=N
        else
            prompt="y/n"
            default=
        fi

        # Ask the question (not using "read -p" as it uses stderr not stdout)
        echo -n "$1 [$prompt] "

        # Read the answer (use /dev/tty in case stdin is redirected from somewhere else)
        read reply </dev/tty

        # Default?
        if [ -z "$reply" ]; then
            reply=$default
        fi

        # Check if the reply is valid
        case "$reply" in
            Y*|y*) return 0 ;;
            N*|n*) return 1 ;;
        esac

    done
}


echo ===================================
echo           mtools setup
echo ===================================
echo

# enter script directory
cd "$(dirname "$0")"

# erase config file
echo "/*************************************************************" >  ./mtools/headers/mtools_config.hpp
echo "*               MTOOLS CONFIGURATION FILE                    *" >>  ./mtools/headers/mtools_config.hpp
echo "*                                                            *" >>  ./mtools/headers/mtools_config.hpp
echo "* This file is automatically generated.                      *" >> ./mtools/headers/mtools_config.hpp
echo "* Run the script 'setup-mtools' to update the configuration. *" >> ./mtools/headers/mtools_config.hpp
echo "**************************************************************/" >>  ./mtools/headers/mtools_config.hpp
echo "" >> ./mtools/headers/mtools_config.hpp
echo "#pragma once" >>  ./mtools/headers/mtools_config.hpp
echo "" >> ./mtools/headers/mtools_config.hpp
echo "" >> ./mtools/headers/mtools_config.hpp

MTOOLSVERSION=`cat ./VERSION`
echo "#define MTOOLS_VERSION $MTOOLSVERSION"  >> ./mtools/headers/mtools_config.hpp
echo "" >> ./mtools/headers/mtools_config.hpp

echo "// Uncomment the next line to disable FLTK console and fall back to cout." >> ./mtools/headers/mtools_config.hpp

if ask "Do you want to disable graphics (MTOOLS_BASIC_CONSOLE) ?"; then
	echo "#define MTOOLS_BASIC_CONSOLE" >>  ./mtools/headers/mtools_config.hpp
else
	echo "//#define MTOOLS_BASIC_CONSOLE" >>  ./mtools/headers/mtools_config.hpp
fi
echo "" >> ./mtools/headers/mtools_config.hpp

if ask "Do you want to use the SSE instruction set ?"; then
	echo "// SSE instruction set support ENABLED"  >> ./mtools/headers/mtools_config.hpp
	echo "#define MTOOLS_USE_SSE" >> ./mtools/headers/mtools_config.hpp
else
	echo "// SSE instruction set support DISABLE"  >> ./mtools/headers/mtools_config.hpp
	echo "//#define MTOOLS_USE_SSE" >> ./mtools/headers/mtools_config.hpp
fi
echo "" >> ./mtools/headers/mtools_config.hpp


if ask "Do you want to add openCL support ?"; then
	echo "// yes, openCL is installed"  >> ./mtools/headers/mtools_config.hpp
	echo "#define MTOOLS_HAS_OPENCL" >> ./mtools/headers/mtools_config.hpp
else
	echo "// no, openCL is NOT installed"  >> ./mtools/headers/mtools_config.hpp
	echo "//#define MTOOLS_HAS_OPENCL" >> ./mtools/headers/mtools_config.hpp
fi
echo "" >> ./mtools/headers/mtools_config.hpp


#done !
echo "/* end of mtools_config.hpp */" >> ./mtools/headers/mtools_config.hpp
echo "" >> ./mtools/headers/mtools_config.hpp

echo ""
echo ""
echo "Configuration complete."

